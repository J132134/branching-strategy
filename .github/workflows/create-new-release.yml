name: Create new release

on:
  push:
    branches:
      - main

jobs:
  create-new-release:
    runs-on: ubuntu-latest
    # environment: qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test available
        run: |
          git fetch -n origin '+refs/heads/releases/*:refs/remotes/origin/releases/*'

          for branch in $(git for-each-ref --format='%(refname:short)' 'refs/remotes/origin/releases/*'); do
            echo ${branch#origin/}
            git merge-base main ${branch#origin/}
            base_commit=$(git merge-base main ${branch#origin/})
            base_commit_time=$(git log -1 --format="%at" $base_commit)
            current_commit_time=$(git log -1 --format="%at" $GITHUB_SHA)
            echo $base_commit
            echo $GITHUB_SHA

            if [ $base_commit_time -ge $current_commit_time ]; then
              echo 'exit 1'
              exit 1
            fi
          done

      - name: Calculate new version
        if: success()
        id: calver
        run: |
          version=$(./scripts/get-new-version.sh)
          echo "new version: $version"
          echo "version=$version" >> $GITHUB_ENV

      - name: Create branch
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const ref = `refs/heads/releases/${process.env.version}`;
            const sha = context.sha;
            await github.rest.git.createRef({ owner, repo, ref, sha });
      
      - name: Checkout to new branch
        uses: actions/checkout@v3
        with:
          ref: releases/${{ env.version }}
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          npm pkg set version=${{ env.version }}
          git add package.json
          git commit -m "Update version to ${{ env.version }}"
          git push origin releases/${{ env.version }}

      - name: Create pull request
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const head = `releases/${process.env.version}`;
            const base = 'main';
            const title = `Release ${process.env.version}`
            await github.rest.pulls.create({ owner, repo, head, base, title });
